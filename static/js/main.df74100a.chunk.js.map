{"version":3,"sources":["component/TransationForm.js","component/Transationlist.js","App.js","reportWebVitals.js","index.js"],"names":["TransationForm","state","returnStateObject","handleInputChange","e","setState","target","name","value","handleSubmit","preventDefault","props","onAddorEdit","this","currentIndex","bAccountNo","iFSC","bName","amount","list","prevProps","length","onSubmit","autoComplete","placeholder","onChange","type","Component","Transationlist","returnList","data","push","localStorage","setItem","JSON","stringify","handleEdit","index","handleDelete","splice","getItem","parse","map","item","onClick","App","searchData","key","fetch","then","json","result","console","log","_","get","event","search","className","description","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOA8CeA,E,4MA3CXC,M,eACO,EAAKC,qB,EAiBZC,kBAAoB,SAAAC,GAChB,EAAKC,SAAL,eACKD,EAAEE,OAAOC,KAAQH,EAAEE,OAAOE,S,EAGnCC,aAAe,SAAAL,GACXA,EAAEM,iBACF,EAAKC,MAAMC,YAAY,EAAKX,Q,uDAtBhC,WACI,OAAgC,GAA5BY,KAAKF,MAAMG,aACL,CACFC,WAAa,GACbC,KAAO,GACPC,MAAO,GACPC,OAAQ,IAGLL,KAAKF,MAAMQ,KAAKN,KAAKF,MAAMG,gB,gCAE1C,SAAmBM,GACZA,EAAUN,cAAgBD,KAAKF,MAAMG,cAAgBM,EAAUD,KAAKE,QAAUR,KAAKF,MAAMQ,KAAKE,QAC7FR,KAAKR,SAAL,eAAkBQ,KAAKX,wB,oBAW/B,WACI,OACI,mCAEA,uBAAMoB,SAAUT,KAAKJ,aAAcc,aAAa,MAAhD,UACI,uBAAOhB,KAAK,aAAaiB,YAAY,UAAUhB,MAAOK,KAAKZ,MAAMc,WAAYU,SAAUZ,KAAKV,oBAAoB,uBAChH,uBAAOI,KAAK,OAAOiB,YAAY,aAAahB,MAAOK,KAAKZ,MAAMe,KAAMS,SAAUZ,KAAKV,oBAAoB,uBACvG,uBAAOI,KAAK,QAAQiB,YAAY,kBAAkBhB,MAAOK,KAAKZ,MAAMgB,MAAOQ,SAAUZ,KAAKV,oBAAoB,uBAC9G,uBAAOI,KAAK,SAASiB,YAAY,SAAShB,MAAOK,KAAKZ,MAAMiB,OAAQO,SAAUZ,KAAKV,oBAAoB,uBACvG,wBAAQuB,KAAK,SAAb,6B,GArCaC,aC0DdC,E,4MAxDX3B,MAAQ,CACJa,cAAc,EACdK,KAAO,EAAKU,c,EAQhBjB,YAAc,SAACkB,GACX,IAAIX,EAAQ,EAAKU,cACY,GAA1B,EAAK5B,MAAMa,aACdK,EAAKY,KAAKD,GAEVX,EAAK,EAAKlB,MAAMa,cAAgBgB,EAChCE,aAAaC,QAAQ,eAAgBC,KAAKC,UAAUhB,IACpD,EAAKd,SAAS,CAACc,OAAML,cAAc,K,EAEvCsB,WAAa,SAAAC,GACT,EAAKhC,SAAS,CACVS,aAAauB,K,EAGrBC,aAAe,SAAAD,GACX,IAAIlB,EAAQ,EAAKU,aACjBV,EAAKoB,OAAOF,EAAM,GAClBL,aAAaC,QAAQ,eAAgBC,KAAKC,UAAUhB,IACpD,EAAKd,SAAS,CAACc,OAAML,cAAc,K,gDAvBvC,WAGI,OAF4C,MAAxCkB,aAAaQ,QAAQ,iBACrBR,aAAaC,QAAQ,eAAgBC,KAAKC,UAAU,KACjDD,KAAKO,MAAMT,aAAaQ,QAAQ,mB,oBAsB3C,WAAU,IAAD,OACL,OACI,gCACI,cAAC,EAAD,CAAgB5B,YAAeC,KAAKD,YAAaE,aAAeD,KAAKZ,MAAMa,aAAcK,KAAMN,KAAKZ,MAAMkB,OAC1G,uBACA,gCACI,gCAEQN,KAAKZ,MAAMkB,KAAKuB,KAAI,SAACC,EAAMN,GACvB,OAAO,+BACH,6BAAKM,EAAK5B,aACV,6BAAK4B,EAAK3B,OACV,6BAAK2B,EAAK1B,QACV,6BAAK0B,EAAKzB,SACV,+BAAI,wBAAQ0B,QAAS,kBAAM,EAAKR,WAAWC,IAAvC,kBACJ,wBAAQO,QAAS,kBAAM,EAAKN,aAAaD,IAAzC,yBANYA,iB,GAxCnBV,a,iBC4CdkB,E,kDA1Cb,aAAc,IAAD,8BACX,gBACK5C,MAAQ,CACX6C,WAAa,MAHJ,E,0CAOb,SAAOC,GAAK,IAAD,OACTC,MAAM,iDAAiDD,GAAKE,MAAK,SAACnB,GAChEA,EAAKoB,OAAOD,MAAK,SAACE,GAChBC,QAAQC,IAAI,SAASF,GACrB,EAAK9C,SAAS,CAACyC,WAAWK,Y,oBAKhC,WAAU,IAAD,OACDrB,EAAOwB,IAAEC,IAAI1C,KAAKZ,MAAM6C,WAAY,sBAAuB,IACjE,OACE,gCACE,cAAC,EAAD,IACA,4CACA,uBAAOpB,KAAK,OAAOD,SAAU,SAAC+B,GAAD,OAAS,EAAKC,OAAOD,EAAMlD,OAAOE,UAC/D,8BACE,qBAAKkD,UAAU,SAAf,SAEI5B,EAAKY,KAAI,SAACC,GACT,OAAQ,mCACR,4CAAeA,EAAKgB,YAAY,yC,GA7B7BhC,aCQHiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.df74100a.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass TransationForm extends Component {\r\n    state = {\r\n        ...this.returnStateObject()\r\n    }\r\n    returnStateObject(){\r\n        if (this.props.currentIndex == -1)\r\n            return{\r\n                bAccountNo : '',\r\n                iFSC : '',\r\n                bName :'',\r\n                amount :''\r\n            }\r\n        else\r\n            return this.props.list[this.props.currentIndex]\r\n    }\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.currentIndex != this.props.currentIndex || prevProps.list.length != this.props.list.length)\r\n            this.setState({...this.returnStateObject()})\r\n    }\r\n    handleInputChange = e => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n        this.props.onAddorEdit(this.state)\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n            \r\n            <form onSubmit={this.handleSubmit} autoComplete=\"off\">\r\n                <input name=\"bAccountNo\" placeholder=\"A/C No.\" value={this.state.bAccountNo} onChange={this.handleInputChange}/><br/>\r\n                <input name=\"iFSC\" placeholder=\"IFSC Code.\" value={this.state.iFSC} onChange={this.handleInputChange}/><br/>\r\n                <input name=\"bName\" placeholder=\"A/C Holder Name\" value={this.state.bName} onChange={this.handleInputChange}/><br/>\r\n                <input name=\"amount\" placeholder=\"Amount\" value={this.state.amount} onChange={this.handleInputChange}/><br/>\r\n                <button type=\"submit\">Submit</button>\r\n            </form>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TransationForm;","import React, { Component } from 'react'\r\nimport TransationForm from './TransationForm'\r\n\r\nclass Transationlist extends Component {\r\n    state = {\r\n        currentIndex:-1,\r\n        list : this.returnList()\r\n    }\r\n    //LocalStorage\r\n    returnList() {\r\n        if (localStorage.getItem('transactions') == null)\r\n            localStorage.setItem('transactions', JSON.stringify([]))\r\n        return JSON.parse(localStorage.getItem('transactions'))\r\n    }\r\n    onAddorEdit = (data) => {\r\n        var list =  this.returnList()\r\n        if(this.state.currentIndex==-1)\r\n        list.push(data)\r\n        else\r\n        list[this.state.currentIndex] = data\r\n        localStorage.setItem('transactions', JSON.stringify(list))\r\n        this.setState({list, currentIndex:-1})\r\n    }\r\n    handleEdit = index => {\r\n        this.setState({\r\n            currentIndex:index\r\n        })\r\n    }\r\n    handleDelete = index => {\r\n        var list =  this.returnList()\r\n        list.splice(index,1)\r\n        localStorage.setItem('transactions', JSON.stringify(list))\r\n        this.setState({list, currentIndex:-1})\r\n     }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <TransationForm onAddorEdit = {this.onAddorEdit} currentIndex ={this.state.currentIndex} list={this.state.list}/>\r\n                <hr/>\r\n                <table>\r\n                    <tbody>\r\n                        {\r\n                            this.state.list.map((item, index) => {\r\n                                return <tr key={index}>\r\n                                    <td>{item.bAccountNo}</td>\r\n                                    <td>{item.iFSC}</td>\r\n                                    <td>{item.bName}</td>\r\n                                    <td>{item.amount}</td>\r\n                                    <td><button onClick={() => this.handleEdit(index)}>Edit</button>\r\n                                    <button onClick={() => this.handleDelete(index)}>Delete</button></td>\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Transationlist;","import React, { Component } from 'react'\nimport Transationlist from './component/Transationlist';\nimport _ from \"lodash\";\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      searchData : null\n    }\n  }\n  \n  search(key){\n    fetch('https://api.zomato.com/v1/search.json?city_id='+key).then((data)=>{\n      data.json().then((result)=>{\n        console.log('result',result)\n        this.setState({searchData:result})\n      })\n    })\n  \n  }\n  render() {\n    const data = _.get(this.state.searchData, \"results.restaurants\", []);\n    return (\n      <div>\n        <Transationlist/>\n        <h1>Zomato App</h1>\n        <input type=\"text\" onChange={(event)=>this.search(event.target.value)}/>\n        <div>\n          <div className=\"pankaj\">\n            {\n              data.map((item)=> {\n               return (<>\n               <span>Text :- {item.description}<n/></span>\n                {/* {console.log(item.text)} */}\n                {/* <div>Text{item.text}</div> */}\n                {/* <div>Description{item.description}</div> */}\n                {/* <div>Image<img src={item.image_url} /></div> */}\n                </>)\n              }) \n            }\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}